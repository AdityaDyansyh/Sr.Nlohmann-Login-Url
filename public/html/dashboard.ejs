<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Login Form</title>
  <link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet" />
  <style>
    /* Reset and Base Styles */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      text-decoration: none;
      list-style: none;
    }

    body {
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      background: #f5f5f5;
      padding: 15px;
    }

    /* Container Styles */
    .container {
      position: relative;
      width: 100%;
      max-width: 400px;
      height: auto;
      background: #fff;
      border-radius: 20px;
      box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
      overflow: hidden;
      padding: 40px 30px;
      text-align: center;
    }
    
    .welcome-text {
      font-size: 24px;
      font-weight: 600;
      color: #333;
      margin-bottom: 10px;
    }

    /* Logo Styles */
    .logo-container {
      margin-bottom: 1.5rem;
    }

    .logo-container img {
      width: 200px;
      height: auto;
      object-fit: contain;
      filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1));
    }

    /* Form Styles */
    form {
      width: 100%;
    }

    /* Input Styles */
    .input-box {
      position: relative;
      margin: 20px 0;
    }

    .input-box input {
      width: 100%;
      padding: 10px 40px 10px 15px;
      background: #f5f5f5;
      border-radius: 6px;
      border: none;
      outline: none;
      font-size: 14px;
      color: #333;
      font-weight: 500;
    }

    .input-box input::placeholder {
      color: #888;
      font-weight: 400;
    }

    .input-box i {
      position: absolute;
      right: 15px;
      top: 50%;
      transform: translateY(-50%);
      font-size: 16px;
      color: #60e780;
    }
    
    /* Error Message Styles */
    .error-message {
      position: absolute;
      bottom: -20px;
      left: 5px;
      color: #ff4444;
      font-size: 12px;
      opacity: 0;
      transform: translateY(5px);
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      gap: 5px;
      text-align: left;
    }
    
    .error-message.show {
      opacity: 1;
      transform: translateY(0);
    }

    /* Button Styles */
    .btn {
      width: 100%;
      height: 40px;
      background: #60e780;
      border-radius: 6px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      border: none;
      cursor: pointer;
      font-size: 14px;
      color: #fff;
      font-weight: 600;
      margin: 10px 0;
      transition: all 0.3s ease;
    }

    .btn:hover {
      background: #50d670;
    }
    
    .btn.register {
        background: transparent;
        border: 1.5px solid #60e780;
        color: #60e780;
    }
    
    .btn.register:hover {
        background: rgba(96, 231, 128, 0.1);
    }

    .loading {
      background-color: #ccc;
      cursor: not-allowed;
    }
    
    /* Responsive Styles */
    @media screen and (max-width: 400px) {
        .container {
            padding: 30px 20px;
        }
        .welcome-text {
            font-size: 22px;
        }
        .logo-container img {
            width: 180px;
        }
    }
  </style>
</head>

<body>
  <div class="container">
    <h2 class="welcome-text">WELCOME TO</h2>

    <div class="logo-container">
      <img src="/game_title.png" alt="Game Title Name">
    </div>

    <form method="post" action="/player/growid/login/validate" id="loginForm">
      <div id="errorDiv" class="hidden">
        <span id="errorMessage"></span>
      </div>
      <input name="type" value="log" type="hidden" />
      <input name="_token" value="<%= JSON.stringify(data) %>" type="hidden" />

      <div class="input-box">
        <input type="text" name="growId" id="loginGrowId" placeholder="Username">
        <i class="bx bxs-user"></i>
        <div class="error-message" id="loginUsernameError"></div>
      </div>

      <div class="input-box">
        <input type="password" name="password" id="loginPassword" placeholder="Password">
        <i class="bx bxs-lock-alt"></i>
        <div class="error-message" id="loginPasswordError"></div>
      </div>

      <button type="submit" id="loginButton" class="btn">Login</button>
      <button type="button" id="registerButton" class="btn register">Register</button>
    </form>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      // Load saved GrowID if available
      if (localStorage.getItem('growId')) {
        const loginGrowId = document.getElementById('loginGrowId');
        if (loginGrowId) {
          loginGrowId.value = localStorage.getItem('growId');
        }
      }

      // Validation Functions
      const validateUsername = (username, errorElement) => {
        if (!username) {
          showValidationError(errorElement, 'Please enter username');
          return false;
        } else if (username.length < 4) {
          showValidationError(errorElement, 'Minimum 4 characters');
          return false;
        } else if (!/^[a-zA-Z0-9]+$/.test(username)) {
          showValidationError(errorElement, 'Invalid input username');
          return false;
        } else if (username.length > 20) {
          showValidationError(errorElement, 'Maximum 20 characters');
          return false;
        }
        return true;
      };

      const validatePassword = (password, errorElement) => {
        if (!password) {
          showValidationError(errorElement, 'Please enter password');
          return false;
        } else if (password.length < 6) {
          showValidationError(errorElement, 'Minimum 6 characters');
          return false;
        }
        return true;
      };

      const showValidationError = (errorElement, message) => {
        if (errorElement) {
          errorElement.innerHTML = message;
          errorElement.classList.add('show');
        }
      };

      function resetErrors(formId) {
        const form = document.getElementById(formId);
        const errorMessages = form.querySelectorAll('.error-message');
        errorMessages.forEach(error => {
          error.classList.remove('show');
        });
      }

      // Login Form Handling
      const form_login = document.getElementById('loginForm');
      if (form_login) {
        form_login.addEventListener('submit', async function (e) {
          e.preventDefault();
          
          const growId = document.getElementById('loginGrowId')?.value.trim();
          const password = document.getElementById('loginPassword')?.value.trim();

          resetErrors('loginForm');

          const isUsernameValid = validateUsername(growId, document.getElementById('loginUsernameError'));
          const isPasswordValid = validatePassword(password, document.getElementById('loginPasswordError'));

          if (isUsernameValid && isPasswordValid) {
            const loginButton = document.getElementById("loginButton");
            loginButton.textContent = "Logging in...";
            loginButton.classList.add("loading");

            setTimeout(function () {
              form_login.submit();
              localStorage.setItem('growId', growId);
              loginButton.textContent = "Login";
              loginButton.classList.remove("loading");
            }, 2000);
          }
        });

        form_login.querySelectorAll('input').forEach(input => {
          input.addEventListener('input', function () {
            const errorElement = this.parentElement.querySelector('.error-message');
            if (errorElement && errorElement.classList.contains('error-message')) {
              errorElement.classList.remove('show');
            }
          });
        });
      }
      
      // Redirect to a registration page when the register button is clicked
      const registerButton = document.getElementById('registerButton');
      if (registerButton) {
          registerButton.addEventListener('click', () => {
            registerButton.textContent = "Registered...";
            registerButton.classList.add("loading");
              form_login.submit(); 
          });
      }
    });
  </script>
</body>

</html>